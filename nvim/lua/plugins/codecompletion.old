-- I tried coq_nvim with the promise of being really fast but it needs a lot of 
-- codes to enable to all configs
-- Instead I went to nvim-cmp but still want to make it better with coq_nvim
return {
    "hrsh7th/nvim-cmp",
    dependencies = {
        "neovim/nvim-lspconfig",
        "hrsh7th/cmp-nvim-lsp", -- LSP integration
        "hrsh7th/cmp-nvim-lua", -- Lua CMP
        "hrsh7th/cmp-nvim-lsp-signature-help", -- Function signature completion
        "hrsh7th/vim-vsnip", -- Collection of snippets
        "hrsh7th/cmp-vsnip", -- Integration with snippets
        "hrsh7th/cmp-path", -- Completion using filepaths names
        "hrsh7th/cmp-buffer", -- Buffer words, may be annoying and we can disable it
        "hrsh7th/cmp-cmdline", -- Completion for cmdline (Vim commands)
    },
    opts = {
        snippet = {
            expand = function(args)
                vim.fn["vsnip#anonymous"](args.body)
            end,
        },
        -- Keymaps
        mapping = {
            ['<C-p>'] = cmp.mapping.select_prev_item(),
            ['<C-n>'] = cmp.mapping.select_next_item(),
            -- Add tab support
            ['<S-Tab>'] = cmp.mapping.select_prev_item(),
            ['<Tab>'] = cmp.mapping.select_next_item(),
            ['<C-S-f>'] = cmp.mapping.scroll_docs(-4),
            ['<C-f>'] = cmp.mapping.scroll_docs(4),
            ['<C-Space>'] = cmp.mapping.complete(),
            ['<C-e>'] = cmp.mapping.close(),
            ['<CR>'] = cmp.mapping.confirm({
                behavior = cmp.ConfirmBehavior.Insert,
                select = true,
            })
          },
          -- Installed sources:
          sources = {
            { name = 'nvim_lsp', keyword_length = 3 },      -- from language server
            { name = 'nvim_lsp_signature_help'},            -- display function signatures with current parameter emphasized
            { name = 'nvim_lua', keyword_length = 2},       -- complete neovim's Lua runtime API such vim.lsp.*
            { name = 'path' },                              -- file paths
            { name = 'buffer', keyword_length = 2 },        -- source current buffer
            { name = 'vsnip', keyword_length = 2 },         -- nvim-cmp source for vim-vsnip 
            { name = 'calc'},                               -- source for math calculation
          },
          window = {
              completion = cmp.config.window.bordered(),
              documentation = cmp.config.window.bordered(),
          },
          formatting = {
              fields = {'menu', 'abbr', 'kind'},
              format = function(entry, item)
                  local menu_icon ={
                      nvim_lsp = 'Î»',
                      vsnip = 'â‹—',
                      buffer = 'Î©',
                      path = 'ðŸ–«',
                  }
                  item.menu = menu_icon[entry.source.name]
                  return item
              end,
          },
    },
    config = function(_, opts)
        require("cmp").setup(opts)
    end,
}